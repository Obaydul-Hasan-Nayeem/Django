ORM ==========================================
(Object Relationship Mapper)

- ORM akta medium / programming technique, jeta application er sathe database er communication maintain kore.
- ORM python code / class k database / sql e convert kore. 

- easy to change database 

- schema - database er logical kaj korar jonno protita component, tabler er moddhe je relationship

Example------------------------------------------

ORM
---
class Student(models.Model):
    stuid = models.IntegerField()
    stuname = models.CharField(max_length = 70)
    stuemail = models.EmailField(max_length=70)
    stupass = models.CharField(max_length=70)


Converted SQL:
--------------
CREATE TABLE "enroll_student"(
    "id" integer NOT NULL PRIMARY KEY, AUTOINCREMENT,
    "stuid" integer NOT NULL,
    "stuname" varchar(70) NOT NULL,
    "stuemail" varchar(70) NOT NULL,
    "stumpass" varchar(70) NOT NULL
);


QuerySet ===================================== 
- akta list jeta object gulo niye toiri hoy.
help us to  
    - read data from database
    - filter
    - order

Model =========================================
- source of information about our data
- essential fields and behaviours of the data
- each model maps to a single database table

Model Class ========================================
- represent a table
- each model is a python class that subclasses django.db.models.Model
- each attribute (id, name, etc) represents a database field
- Django gives autometically generated database access API 
- Django provides sqlites database by default
- We can use other database like MySQL, Oracle SQL etc. 

Migrations ===============================================
- way of propogating changes to make models (adding a field, deleting a model, etc) into your db schema
- model class gulo django k jananor jonno formal way

makemigrations-----------------------
- model class k sql command e convert kora 
        python manage.py makemigrations

migrate------------------------------
- to execute sql statements generated by makemigrations
        python manage.py migrate 

showmigrations-----------------------
- This lists a project's migrations 


Built-in field options ======================================
nULL------------------
True / False

blank--------------------
True / False

default-------------------

verbouse_name------------
A human readable name for the field. If the verbous name is not given, django will autometically create it using the field's attribute name, converting underscores to spaces. 

db_column------------------ 

primary_key----------------

unique--------------------

MODEL FORM ============================================
- autometically generated from an existing model
- modelform includes all the fields defined in the model. along with any additional validation and processing logic that you define in the form class

Meta Class ===========================================
- onno akta class k modify / update / add korte
        - model
        - fields
        - exclude
        - widgets
        - labels
        - help_taxts
        - error_messages

Model Form Fields:
    - AutoField
    - BigAutoField
    - BigIntegerField
    - BinaryField
    - BooleanField
    - CharField
    - DateField
    - DateTimeField
    - DecimalField
    - DurationField

save() method ================================================
